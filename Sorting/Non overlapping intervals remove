IN THIS BASICALLY WE HAVE TO FIRSTLY SORT IT BY END TIME THEN 
CHECK IF end>intervals[i][0] ------> count++IF SO THEN RETURN COUNT 

Input: intervals[][] = [[1, 2], [2, 3], [3, 4], [1, 3]]
Output: 1
Explanation: [1, 3] can be removed and the rest of the intervals are non-overlapping.


class Solution {
    static int minRemoval(int intervals[][]) {
        // code here
        if(intervals.length==0){
            return 0;
        }
        //sort in end time
        Arrays.sort(intervals,(a,b)->Integer.compare(a[1],b[1]));
        int count = 0;
        int n = intervals.length;
        
        int end = intervals[0][1];
        
        for(int i=1;i<intervals.length;i++){
            if(end>intervals[i][0]){
                count++;
            }
            else{
                end = intervals[i][1];
            }
        }
        return count;
    }
}
